name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: rag-project-469718
  REGION: us-central1
  REPOSITORY: rag-app
  BACKEND_IMAGE: rag-api

jobs:
  # === Job 1: Run pre-commit checks ===
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      - name: 📥 Install dependencies
        run: poetry install

      - name: ✅ Run pre-commit
        run: poetry run pre-commit run --all-files

  # === Job 2: Build & Deploy Backend ===
  build-and-deploy-backend:
    name: Build & Deploy Backend
    runs-on: ubuntu-latest
    needs: pre-commit
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏷️ Generate image tag
        id: tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: ☁️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 🐳 Configure Docker
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: 🏗️ Build & Push Backend Image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.tag }} -f backend/Dockerfile backend
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:${{ steps.tag.outputs.tag }}

      - name: 🚀 Deploy Backend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: rag-app
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.BACKEND_IMAGE }}:${{ needs.build-and-push.outputs.tag }}

  # === Job 3: Build & Deploy Frontend ===
  build-and-deploy-frontend:
    name: Build & Deploy Frontend
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Build Frontend
        run: |
          cd frontend
          npm install
          npm run build

      - name: 🚀 Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_RAG_PROJECT_469718 }}'
          channelId: live
          projectId: rag-project-469718
          entryPoint: ./frontend
