name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy_target:
        description: '¿Qué componente quieres desplegar?'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - backend
          - frontend

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  ARTIFACT_REGISTRY_REPO: ${{ vars.ARTIFACT_REGISTRY_REPO }}
  BACKEND_SERVICE_NAME: ${{ vars.BACKEND_SERVICE_NAME }}
  BACKEND_IMAGE_NAME: ${{ vars.BACKEND_IMAGE_NAME }}
  BACKEND_IMAGE_NAME_LABEL: ${{ vars.BACKEND_IMAGE_NAME_LABEL }}
  FIREBASE_HOSTING_SITE_ID: ${{ vars.FIREBASE_HOSTING_SITE_ID }}

jobs:
  # === Job 1: Run pre-commit checks ===
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      - name: 📥 Install backend dependencies
        run: poetry -C backend install

      - name: ✅ Run pre-commit checks
        run: poetry -C backend run pre-commit run --all-files

  # === Job 2: Build & Deploy Backend ===
  build-and-deploy-backend:
    name: Build & Deploy Backend
    if: github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'backend'
    runs-on: ubuntu-latest
    needs: pre-commit
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏷️ Generate image tag
        id: tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: 🔐 Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: ☁️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: 🐳 Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: 🏗️ Build & Push Backend Image
        run: |
          docker build -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.BACKEND_IMAGE_NAME_LABEL }} -f backend/Dockerfile backend
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.BACKEND_IMAGE_NAME_LABEL }}

      - name: 🚀 Deploy Backend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.BACKEND_SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.BACKEND_IMAGE_NAME_LABEL }}

  # === Job 3: Build & Deploy Frontend ===
  build-and-deploy-frontend:
    name: Build & Deploy Frontend
    if: github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'frontend'
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Create .env file and Build Frontend
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        run: |
          cd frontend
          echo "VITE_API_BASE_URL=$VITE_API_BASE_URL" > .env.production
          npm install
          npm run build

      - name: 📦 Install Firebase CLI
        run: npm install -g firebase-tools

      - name: 🚀 Deploy to Firebase Hosting (CI Token)
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_CI_TOKEN }}
        run: |
          cd frontend
          firebase deploy --only hosting --project ${{ env.FIREBASE_PROJECT_ID }} --token $FIREBASE_TOKEN --non-interactive
